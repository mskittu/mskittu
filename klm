def compare_pcds_hive_data():
    try:
        # Load PCDS and Hive Intermediate Data
        pcds_df = pd.read_csv(pcds_output_path)
        hive_df = pd.read_csv(hive_output_path)

        # Merge both datasets on SOX ELEMENT
        combined_df = pcds_df.merge(hive_df, on="SOX_ELEMENT", suffixes=("_SRC", "_TGT"))

        # Calculate variance
        combined_df["ACTUAL VARIANCE"] = combined_df["SRC_value"] - combined_df["Tgt_value"]
        combined_df["RULE CATEGORU"] = "Completeness"
        combined_df["Results"] = combined_df["ACTUAL VARIANCE"].apply(lambda x: "PASS" if x == 0 else "FAIL")

        # Reorder columns
        final_df = combined_df[["SRC_NAME", "TGT_NAME", "SOX_ELEMENT", "RULE_CATEGORU", "RESULTS", "SRC_VALUE", "TGT_VALUE", "ACTUAL_VARIANCE"]]

        # Save the final report
        final_df.to_csv(final_output_path, index=False)
        print(f"Final comparison report saved at: {final_output_path}")

        # Filter fail data
        fail_data = final_df[final_df["RESULTS"] == "FAIL"]

        # Save fail data to a separate CSV file
        fail_output_path = "fail_data.csv"  # Specify your fail data file path here
        fail_data.to_csv(fail_output_path, index=False)
        print(f"Fail data saved at: {fail_output_path}")

        return final_df

    except Exception as e:
        print(f"Error comparing PCDS and Hive data: {e}")
        raise
