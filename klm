import json
import base64
import ssl
from urllib import request
import os
from datetime import datetime

# ---------------- CONFIG ----------------
BASE_URL = "https://data-fabric-catalogue-uatb.np1.apaas4.barclays.intranet"
ENDPOINT = "/data/fabric/catalogue/v1/datasettype/uscb_rftloans_fdp_db/datasetdefinition/uscb_rftloans_fdp_db_pco_ln_address_details/raw"

AUTH_SCHEME = "basic"  # or "bearer"
USERNAME = "<your-username>"
PASSWORD = "<your-password>"
BEARER_TOKEN = ""       # only if AUTH_SCHEME="bearer"

VERIFY_SSL = False
TIMEOUT = 30

# Folder to save locally
SAVE_PATH = r"C:\Users\X01532741\Documents\SwaggerPOC"
# ----------------------------------------


def build_headers():
    headers = {"Accept": "application/json"}
    if AUTH_SCHEME.lower() == "basic":
        token = base64.b64encode(f"{USERNAME}:{PASSWORD}".encode()).decode()
        headers["Authorization"] = f"Basic {token}"
    elif AUTH_SCHEME.lower() == "bearer":
        headers["Authorization"] = f"Bearer {BEARER_TOKEN}"
    return headers


def fetch_json(url, headers):
    ctx = None if VERIFY_SSL else ssl._create_unverified_context()
    req = request.Request(url, headers=headers, method="GET")
    with request.urlopen(req, timeout=TIMEOUT, context=ctx) as resp:
        body = resp.read().decode("utf-8")
        return json.loads(body)


def save_json(data):
    """Save JSON to local file in pretty format."""
    os.makedirs(SAVE_PATH, exist_ok=True)
    ts = datetime.now().strftime("%Y%m%d_%H%M%S")
    file_name = f"swagger_output_{ts}.json"
    full_path = os.path.join(SAVE_PATH, file_name)

    with open(full_path, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)
    print(f"\n✅ JSON saved successfully at:\n{full_path}\n")


def main():
    url = BASE_URL.rstrip("/") + ENDPOINT
    print(f"➡ Fetching JSON from: {url}\n")
    headers = build_headers()

    data = fetch_json(url, headers)

    # 1️⃣ Print the JSON
    print(json.dumps(data, indent=2, ensure_ascii=False))

    # 2️⃣ Save JSON locally
    save_json(data)


if __name__ == "__main__":
    main()
