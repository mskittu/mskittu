#!/bin/bash

# Set the first date of the current month and current date variables
export FIRST_DATE_CURR_MNTH=$(date -d "$(date +%Y%m01)" +%Y%m%d)
export COB_DATE=$(date -d "$FIRST_DATE_CURR_MNTH -1 day" +%Y%m%d)

# Define paths for touch command based on environment variables
JOB_PATH="$EDGENODE_ROOT_DIR/job_date/$JOB_GROUP/$JOB_NAME/date"

# Automate job status management
JOB_STATUS_FILE="${INPUT_FILE_PATH}/model_datastore_workflow.dat"
JOB_STATUS="Pending"

# Generate only the last day of each previous month (e.g., 20250331, 20250430)
DATES_TO_RUN=()
CURRENT_DATE="$COB_DATE"

# Add last date of each previous month up to a fixed limit (e.g., last 6 months)
for ((i=0; i<6; i++)); do
    LAST_DAY_PREV_MONTH=$(date -d "$CURRENT_DATE -$(date -d "$CURRENT_DATE" +%d) days" +%Y%m%d)
    DATES_TO_RUN+=("$LAST_DAY_PREV_MONTH")
    CURRENT_DATE="$LAST_DAY_PREV_MONTH"
    if [ "$CURRENT_DATE" -lt "20220101" ]; then
        break  # Prevent excessive looping
    fi
done

# Process each date
for DATE in "${DATES_TO_RUN[@]}"; do
    DATE_FILE="$JOB_PATH/$DATE"
    if [ ! -f "$DATE_FILE" ]; then
        echo "Touching COB date file for $DATE..."
        touch "$DATE_FILE"
        echo "Date file created: $DATE_FILE"
    else
        echo "Date file already exists: $DATE_FILE"
    fi
    # Update job status for each date if not completed
    if ! grep -q "${DATE},Completed" "$JOB_STATUS_FILE"; then
        echo "Ingestion,${DATE},${JOB_STATUS},${3},${4}" >> "$JOB_STATUS_FILE"
        echo "Job marked as pending: $DATE"
    else
        echo "Skipping completed job: $DATE"
    fi
    echo "COB date set to: $DATE"
done
